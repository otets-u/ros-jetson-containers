#
# To build this Dockerfile, run:  scripts/docker_build_ros.sh --distro humble
# It sets the Docker arguments below (distro can be: foxy, galactic, humble, iron)
# See scripts/docker_build_ros.sh --help for more options.
#
ARG BASE_IMAGE
FROM ${BASE_IMAGE}

ARG ROS_PKG=ros_base
ARG ROS_VERSION=humble

ENV ROS_DISTRO=${ROS_VERSION}
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}
ENV ROS_PYTHON_VERSION=3

ENV DEBIAN_FRONTEND=noninteractive
ENV SHELL /bin/bash
SHELL ["/bin/bash", "-c"] 

WORKDIR /tmp

# change the locale from POSIX to UTF-8
RUN locale-gen en_US en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV PYTHONIOENCODING=utf-8

# set Python3 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1

# install OpenCV (with CUDA)
ARG OPENCV_URL=https://nvidia.box.com/shared/static/5v89u6g5rb62fpz4lh0rz531ajo2t5ef.gz
ARG OPENCV_DEB=OpenCV-4.5.0-aarch64.tar.gz

COPY scripts/opencv_install.sh opencv_install.sh
RUN ./opencv_install.sh ${OPENCV_URL} ${OPENCV_DEB}
    
# build ROS from source
COPY scripts/ros2_build.sh ros2_build.sh
RUN ./ros2_build.sh

# Set the default DDS middleware to cyclonedds
# https://github.com/ros2/rclcpp/issues/1335
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

# setup container entrypoint
COPY ./scripts/ros_entrypoint.sh /ros_entrypoint.sh
RUN echo 'source /ros_entrypoint.sh' >> /root/.bashrc

#ENTRYPOINT ["/ros_entrypoint.sh"]
#CMD ["bash"]

WORKDIR /

# install ros_deep_learning package (PyTorch-based container only)
COPY ./scripts/ros_deep_learning.sh ros_deep_learning.sh
RUN ./ros_deep_learning.sh

# add general user
ARG USERNAME=user
ARG PASSWORD=user
ARG USER_DIR=/home/${USERNAME}

WORKDIR /tmp
COPY scripts/general_user_add.sh general_user_add.sh
RUN ./general_user_add.sh --user_name ${USERNAME} --user_passwd ${PASSWORD} --user_dir ${USER_DIR}

USER ${USERNAME}
WORKDIR ${USER_DIR}
